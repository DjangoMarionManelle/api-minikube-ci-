name: Build and Push Docker image on merge to main

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/api-minikube-ci:${{ github.sha }}

    - name: Wait for MySQL to be ready
      run: |
        while ! mysqladmin ping -h"127.0.0.1" --silent; do
          echo "Waiting for MySQL..."
          sleep 2
        done

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_USER: root
        DB_PASSWORD: root_password
        DB_NAME: test_db
      run: |
        python -m unittest discover -s . -p 'test_app.py'

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: test-reports/results.xml

    - name: Generate Swagger documentation
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_USER: root
        DB_PASSWORD: root_password
        DB_NAME: test_db
      run: |
        mkdir -p ./docs && \
        flask run --host=0.0.0.0 & sleep 10 && \
        wget -r -np -k -P ./docs http://127.0.0.1:5000/apidocs/ && \
        touch ./docs/.nojekyll && \
        ls -al ./docs

    - name: Verify documentation generation
      run: ls -al ./docs

    - name: Checkout gh-pages branch
      uses: actions/checkout@v2
      with:
        ref: gh-pages

    - name: Copy generated docs to gh-pages
      run: |
        cp -r ./docs/* .

    - name: Commit and push changes
      run: |
        git config --global user.email "marionlaury.r@gmail.com"
        git config --global user.name "Marion Randrianasolo"
        git add .
        git commit -m "Update Swagger documentation"
        git push origin gh-pages

    - name: Send Discord notification
      run: |
        curl -H "Content-Type: application/json" \
             -d "{\"content\": \"Build and deployment successful for commit ${{ github.sha }}!\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Log out from Docker Hub
      run: docker logout
